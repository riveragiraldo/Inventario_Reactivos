# Generated by Django 4.2.2 on 2023-07-14 14:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaginaInicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Almacenamiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100, verbose_name='Ubicación/Asignaturas')),
                ('description', models.TextField(max_length=1000, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Ubicación en Almacén',
                'verbose_name_plural': 'Ubicación en Almacén',
            },
        ),
        migrations.CreateModel(
            name='Destinos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Destino')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Destino',
                'verbose_name_plural': 'Destinos',
            },
        ),
        migrations.CreateModel(
            name='Estados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Estado')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='Facultades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre Facultad')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Facultad',
                'verbose_name_plural': 'Facultades',
            },
        ),
        migrations.CreateModel(
            name='Laboratorios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre Laboratorio')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Laboratorio',
                'verbose_name_plural': 'Laboratorios',
            },
        ),
        migrations.CreateModel(
            name='Marcas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Marca')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Marca',
                'verbose_name_plural': 'Marcas',
            },
        ),
        migrations.CreateModel(
            name='Reactivos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.PositiveIntegerField(verbose_name='Color CGA')),
                ('number', models.CharField(max_length=5, verbose_name='Número')),
                ('subnumber', models.CharField(max_length=3, verbose_name='Sub-número')),
                ('code', models.CharField(max_length=255, verbose_name='Código')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('cas', models.CharField(max_length=20, verbose_name='Código CAS')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Reactivo',
                'verbose_name_plural': 'Reactivos',
            },
        ),
        migrations.CreateModel(
            name='RespelC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Clasificación Respel')),
                ('description', models.TextField(max_length=1000, verbose_name='Descripción')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Clasificación Respel',
                'verbose_name_plural': 'Clasificación Respel',
            },
        ),
        migrations.CreateModel(
            name='Responsables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cc', models.IntegerField(verbose_name='Cédula')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre Responsable')),
                ('mail', models.EmailField(max_length=255, verbose_name='Email')),
                ('phone', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('is_active', models.BooleanField(default=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Responsable',
                'verbose_name_plural': 'Responsables',
            },
        ),
        migrations.CreateModel(
            name='SGA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Codificiación SGA')),
                ('description', models.TextField(max_length=1000, verbose_name='Descripción')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Codificiación SGA',
                'verbose_name_plural': 'Codificiación SGA',
            },
        ),
        migrations.CreateModel(
            name='Unidades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Unidad')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Unidad',
                'verbose_name_plural': 'Unidades',
            },
        ),
        migrations.CreateModel(
            name='Ubicaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ubicación/Asignaturas')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('facultad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facultad', to='reactivos.facultades', verbose_name='Facultad')),
            ],
            options={
                'verbose_name': 'Ubicación/Asignaturas',
                'verbose_name_plural': 'Ubicaciones/Asignaturas',
            },
        ),
        migrations.CreateModel(
            name='Salidas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('reference', models.CharField(max_length=255, verbose_name='Referencia')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Cantidad de salida')),
                ('observations', models.TextField(max_length=1000, verbose_name='Observaciones')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='reactivos.destinos', verbose_name='Destino')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab', to='reactivos.laboratorios', verbose_name='Laboratorio')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='reactivos.ubicaciones', verbose_name='Ubicación')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager', to='reactivos.responsables', verbose_name='Responsable')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name_react', to='reactivos.reactivos', verbose_name='Nombre Reactivo')),
                ('trademark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name_trademark', to='reactivos.marcas', verbose_name='Marca')),
            ],
            options={
                'verbose_name': 'Salida',
                'verbose_name_plural': 'Salidas',
            },
        ),
        migrations.AddField(
            model_name='reactivos',
            name='respel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respel', to='reactivos.respelc', verbose_name='Clasificación Respel'),
        ),
        migrations.AddField(
            model_name='reactivos',
            name='sga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resp', to='reactivos.sga', verbose_name='Clasificación SGA'),
        ),
        migrations.AddField(
            model_name='reactivos',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state', to='reactivos.estados', verbose_name='Presentación'),
        ),
        migrations.AddField(
            model_name='reactivos',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactive', to='reactivos.unidades', verbose_name='Unidad'),
        ),
        migrations.CreateModel(
            name='Inventarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Cantidad en inventario')),
                ('reference', models.CharField(max_length=20, verbose_name='Referencia')),
                ('fecha_registro', models.DateTimeField(auto_now=True, verbose_name='Últma actualización')),
                ('edate', models.DateField(verbose_name='Fecha de vencimiento')),
                ('minstock', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Ingrese el stock mínimo (puede ser nulo).', max_digits=8, null=True, verbose_name='Stock mínimo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratorio', to='reactivos.laboratorios', verbose_name='Laboratorio')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos.reactivos', verbose_name='Nombre del reactivo')),
                ('trademark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos.marcas', verbose_name='Marca')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unidad', to='reactivos.unidades', verbose_name='Unidades')),
                ('wlocation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wloc', to='reactivos.almacenamiento', verbose_name='Ubicación en Almacén')),
            ],
            options={
                'verbose_name_plural': 'Inventarios',
            },
        ),
        migrations.CreateModel(
            name='Entradas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha')),
                ('reference', models.CharField(max_length=255, verbose_name='Referencia')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Cantidad de entrada')),
                ('order', models.CharField(max_length=255, verbose_name='Orden No.')),
                ('observations', models.TextField(max_length=1000, verbose_name='Observaciones')),
                ('price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor')),
                ('nproject', models.CharField(max_length=15, verbose_name='Número de proyecto')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reactivos.destinos', verbose_name='Destino')),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labs', to='reactivos.laboratorios', verbose_name='Laboratorio')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Ubicacion', to='reactivos.ubicaciones', verbose_name='Asignatura/Ubicación')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsable', to='reactivos.responsables', verbose_name='Responsable')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name_reactivo', to='reactivos.reactivos', verbose_name='Nombre Reactivo')),
                ('trademark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='name_marca', to='reactivos.marcas', verbose_name='Marca')),
            ],
            options={
                'verbose_name': 'Entrada',
                'verbose_name_plural': 'Entradas',
            },
        ),
        migrations.AddField(
            model_name='almacenamiento',
            name='lab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labrel', to='reactivos.laboratorios', verbose_name='Laboratorio'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electrónico')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('lab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_name', to='reactivos.laboratorios', verbose_name='laboratorio')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
